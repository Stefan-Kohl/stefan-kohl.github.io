
SequenceTransformationMatrix := function ( dim )

  local  M, n, l, lcm, q, i, j, r, v, line;

  v := function ( r, j )
    local  l;
    l := ListWithIdenticalEntries(r,0);
    l[j] := 1;
    return l;
  end;

  line := function ( n )
    if n <= 0 then return -2*n+1; else return 2*n; fi; 
  end;

  M := NullMat(dim,dim);
  M[1][1] := 1; M[2][2] := 1;
  for i in [3..dim] do
    n := QuoInt(i,2);
    if i mod 2 = 1 then n := -n; fi;
    lcm := Lcm([1..i-1]);
    q := List(Collected(Factors(lcm)),p->p[1]^p[2]);
    r := Length(q);
    l := List([1..r],j->ChineseRem(q,v(r,j)));
    M[i] := Sum([1..r],j->l[j]*M[line(n-SignInt(n)*q[j])]) mod lcm;
    for j in [1..i] do
      if M[i][j] > lcm/2 then M[i][j] := M[i][j] - lcm; fi;
    od;
    M[i][i] := lcm;
  od;
  return M;
end;

